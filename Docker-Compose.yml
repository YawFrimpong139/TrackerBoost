services:
  app:
    build: .
    container_name: project-tracker
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hospital
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=zealow139
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/trackproject
      - SPRING_REDIS_HOST=redis
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - trackproject-network

  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=trackproject
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=zealow139
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - trackproject-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=trackproject
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - trackproject-network
    healthcheck:
      test: ["CMD", "mongosh","--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - trackproject-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  mongodb-data:
  redis-data:

networks:
  trackproject-network:
    driver: bridge
